/* EraContainer.tsx */

.era-container-padding {
  width: clamp(300px, 100%, 2040px);
  margin-inline: auto;
  padding: var(--container-padding);
}

.era-container-padding h1 {
  font-size: 2rem;
}

.era-container-padding p {
  font-size: 1.5rem;
  line-height: 2.5rem;
}

@media only screen and (max-width: 750px) {
  .era-container-padding {
    padding: 1rem;
  }
}

@media only screen and (max-width: 450px) {
  .era-container {
    width: max(300px, 100%);
  }
}

/* Button.tsx */

button {
  padding-inline: 3rem;
  border-radius: 15px;
  border: 2px solid;
  transition: background-color 200ms ease-in-out;
}

button p {
  font-size: 1.5rem;
  font-weight: bold;
  letter-spacing: 0.2rem;
  transition: color 200ms ease-in-out;
}

@media only screen and (max-width: 400px) {
  button {
    padding-inline: 1.5rem;
  }
  button p {
    font-size: 1rem;
  }
}

/* Title.tsx */

.title__container {
  text-align: center;
}

.title__container h1 {
  /* margin: 0;
  padding: 0; */
  font-weight: 500;
  font-size: 4rem;
  color: white;
  font-family: RalphieTall;
  letter-spacing: 0.3rem;
}

.title__container h4 {
  margin-block-end: 53.12px;
  font-weight: 100;
  letter-spacing: 0.2rem;
  max-width: 1000px;
  margin-inline: auto;
}

@media only screen and (max-width: 470px) {
  .title__container h1 {
    font-size: 3rem;
  }
}

/* Carousel.tsx */

.carousel__container {
  width: 100%;
  overflow: hidden;
  padding: 2rem 4rem;
  position: relative;
}

.carousel__container img {
  height: 250px;
  border-radius: var(--border-radius);
}

.carousel__container img:hover {
  cursor: pointer;
  border: 2px solid white;
}

.left-arrow,
.right-arrow {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  height: 100%;
  width: 50px;
}

.left-arrow {
  left: 0;
}

.right-arrow {
  right: 0;
}

.left-arrow:hover,
.right-arrow:hover {
  cursor: pointer;
  background-color: rgba(104, 104, 104, 0.238);
}

.images-wrapper {
  display: flex;
  gap: 2rem;
  overflow-x: auto;
}

@media only screen and (max-width: 450px) {
  .carousel__container {
    width: max(300px, 100%);
  }
}

/* Modal.tsx */

.modal__container {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  /* min-height: 800px; */
  z-index: 100;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal__container .img-container {
  /* make sure to set a value to height so that the img shrinks as the screen is resized vertically */
  height: 90%;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.modal__container p {
  background-color: black;
  border-radius: 15px;
  padding: 0.5rem;
  color: white;
  font-size: 1.5rem;
  letter-spacing: 0.3rem;
  /* align-self: center; */
  margin-block: 0;
  align-self: flex-end;
}

.modal__container p:hover {
  cursor: pointer;
  color: rgb(176, 176, 176);
}

.modal__container img {
  /* set both properties to 100% so the img scales accordingly as screen is resized whether horizontally or vertically */
  max-width: 100%;
  max-height: 100%;
  /* setting width and height to 100% will cause the img to stretch and not be properly scaled as it will always occupy the full space of the parent */
  /* setting max-width and max-height to 100% instead ensures that the height and width of the image will always follow the height and width of the parent, respectively, while the resizing of the image is properly scaled since the values set to max-width and max-height are not the absolute width and height of the image; they are just the max. */
}

/* Lyrics.tsx */

.lyrics__container {
  width: clamp(300px, 100%, 2040px);
  margin-inline: auto;
  padding: var(--container-padding);
  border: 5px solid yellow;
}

@media only screen and (max-width: 750px) {
  .lyrics__container {
    padding: 1rem;
  }
}
